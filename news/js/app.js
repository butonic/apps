// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  angular.module('News', []);

  angular.module('News').factory('Controller', function() {
    var Controller;
    return Controller = (function() {

      function Controller() {}

      return Controller;

    })();
  });

  angular.module('News').controller('FeedController', [
    'Controller', '$scope', 'FeedModel', function(Controller, $scope, FeedModel) {
      var FeedController;
      FeedController = (function(_super) {

        __extends(FeedController, _super);

        function FeedController($scope, feedModel) {
          this.$scope = $scope;
          this.feedModel = feedModel;
          this.$scope.items = this.feedModel.getItems();
        }

        return FeedController;

      })(Controller);
      return new FeedController($scope, FeedModel);
    }
  ]);

  angular.module('News').controller('ItemController', [
    'Controller', '$scope', function(Controller, $scope) {
      var ItemController;
      ItemController = (function(_super) {

        __extends(ItemController, _super);

        function ItemController($scope) {
          this.$scope = $scope;
        }

        return ItemController;

      })(Controller);
      return new ItemController($scope);
    }
  ]);

  angular.module('News').factory('ItemModel', [
    'Model', function(Model) {
      var ItemModel;
      ItemModel = (function(_super) {

        __extends(ItemModel, _super);

        function ItemModel() {
          return ItemModel.__super__.constructor.apply(this, arguments);
        }

        return ItemModel;

      })(Model);
      return new ItemModel();
    }
  ]);

  angular.module('News').factory('Model', function() {
    var Model;
    return Model = (function() {

      function Model() {
        this._items = [];
        this._itemIds = {};
      }

      Model.prototype.add = function(item) {
        this._items.push(item);
        return this._itemIds[item.id] = item;
      };

      Model.prototype.update = function(item) {
        return this._items = item;
      };

      Model.prototype.removeById = function(id) {
        var counter, item, removeItemIndex, _i, _len, _ref;
        removeItemIndex = null;
        _ref = this.items;
        for (counter = _i = 0, _len = _ref.length; _i < _len; counter = ++_i) {
          item = _ref[counter];
          if (item.id === id) {
            removeItemIndex = counter;
          }
        }
        if (removeItemIndex !== null) {
          this.items.splice(removeItemId, 1);
          return delete this._itemIds[id];
        }
      };

      Model.prototype.getItemById = function(id) {
        return this._itemIds[id];
      };

      Model.prototype.getItems = function() {
        return this._items;
      };

      return Model;

    })();
  });

  angular.module('News').factory('Updater', ['$rootScope', function($rootScope) {}]);

  angular.module('News').factory('FeedModel', [
    'Model', function(Model) {
      var FeedModel;
      FeedModel = (function(_super) {

        __extends(FeedModel, _super);

        function FeedModel() {}

        return FeedModel;

      })(Model);
      return new FeedModel();
    }
  ]);

  angular.module('News').factory('FeedModel', [
    'Model', function(Model) {
      var FeedModel;
      FeedModel = (function(_super) {

        __extends(FeedModel, _super);

        function FeedModel() {}

        return FeedModel;

      })(Model);
      return new FeedModel();
    }
  ]);

}).call(this);
